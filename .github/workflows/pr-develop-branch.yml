name: Validate PR on develop branch
on:
    pull_request:
      types: [opened, synchronize]
      branches: [ dev ]
      paths:
        - 'force-app/**'


jobs:
    validate-deployment-on-develop-org:
        runs-on: ubuntu-latest
        container:
          image: salesforce/cli:latest-slim
        steps:
            - uses: actions/setup-node@v4
              with:
                node-version: '20'
            - name: 'Checkout source code'
              uses: actions/checkout@v4
              with:
                fetch-depth: 0
            - name: 'Installing SFDX scanner'
              run: sf plugins install @salesforce/sfdx-scanner

            # Apex::[CommunitiesLoginControllerTest,MyProfilePageControllerTest]::Apex
            # or Apex::[all]::Apex to run all tests
            - name: 'Read PR Body'
              env:
                PR_BODY: ${{github.event.pull_request.body}}
              run: |
                  echo $PR_BODY > ./pr_body.txt
                  node ./parsePR.js
                  TESTS=$(cat testsToRun.txt)
                  echo "APEX_TESTS=$TESTS" >> $GITHUB_ENV


            # The URL is stored in the Github Secret named SFDX_INTEGRATION_URL
            - name: 'Populate auth file with SFDX_URL secret of integration org'
              shell: bash
              run: |
                  set -x
                  echo ${{ secrets.SFDX_INTEGRATION_URL}} | sf org login sfdx-url -s -u
            - name: 'Scan code'
              run: |
                  cd force-app
                  sf scanner run --format sarif --target './**/*.cls' --category "Design,Best Practices,Performance" --outfile 'apexScanResults.sarif'
                  cd ..
            - name: Upload SARIF file
              uses: github/codeql-action/upload-sarif@v3
              with:
                sarif_file: force-app/apexScanResults.sarif

            - name: 'Check-only deploy delta changes - run specified tests'
              if: ${{ env.APEX_TESTS != 'all' }}
              run: |
                  echo ${{env.APEX_TESTS}}
                  sf project deploy validate -d force-app --test-level RunSpecifiedTests --tests ${{env.APEX_TESTS}} --json
            # If the env variable equals all, we run all tests
            - name: 'Check-only deploy delta changes - run all tests'
              if: ${{ env.APEX_TESTS == 'all' }}
              run: |
                  sf project deploy validate -d force-app --test-level RunLocalTests -w 30 --coverage-formatters=clover --json
